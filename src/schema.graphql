type Query {
    feed(filter: String, skip: Int, first: Int, orderBy: ItemOrderByInput): Feed
    item(id: ID!): Item!
    user: User
}

type Mutation {
    createItem(name: String!, description: String): Item!
    updateItem(id: ID!, name: String, description: String, done: Boolean): Item!
    deleteItem(id: ID!): Item!
    signup(name: String!, password: String!): AuthPayload!
    login(name: String!, password: String!): AuthPayload!
}

type Subscription {
    newItem: Item
}

type Feed {
    items: [Item!]!
    count: Int!
}

type Item {
    id: ID!
    createdAt: String!
    updatedAt: String!
    name: String!
    description: String!
    postedBy: User!
    done: Boolean!
}

type AuthPayload {
    token: String!
    user: User!
}

type User {
    id: ID!
    name: String!
    items: [Item!]!
}

enum ItemOrderByInput {
    description_ASC
    description_DESC
    name_ASC
    name_DESC
    createdAt_ASC
    createdAt_DESC
    updatedAt_ASC
    updatedAt_DESC
}